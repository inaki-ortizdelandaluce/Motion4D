> restart:grtw();

                     GRTensorII Version 1.79 (R6)


                           6 February 2001


      Developed by Peter Musgrave, Denis Pollney and Kayll Lake


                 Copyright 1994-2001 by the authors.


    Latest version available from: http://grtensor.phy.queensu.ca/


                  /home/tmueller/Maple/Grii/metrics

> makeg(BarriolaVilenkin);

 
Makeg 2.0: GRTensor metric/basis entry utility
 
To quit makeg, type 'exit' at any prompt.
 
Do you wish to enter a 1) metric [g(dn,dn)],
                       2) line element [ds],
                       3) non-holonomic basis [e(1)...e(n)], or
                       4) NP tetrad [l,n,m,mbar]?

> 2:
Enter coordinates as a LIST (eg. [t,r,theta,phi]):
> [t,r,theta,phi]:
Enter the line element using d[coord] to indicate differentials.
(for example,  r^2*(d[theta]^2 + sin(theta)^2*d[phi]^2)
[Type 'exit' to quit makeg]
 ds^2 = 
> -c^2*d[t]^2+d[r]^2+k^2*r^2*(d[theta]^2+sin(theta)^2*d[phi]^2);

If there are any complex valued coordinates, constants or functions
for this spacetime, please enter them as a SET ( eg. { z, psi } ).

Complex quantities [default={}]: 
> {}:

                   The values you have entered are:


                   Coordinates = [t, r, theta, phi]


                               Metric:


                     [  2                                   ]
                     [-c     0      0              0        ]
                     [                                      ]
                     [ 0     1      0              0        ]
         g[a]  [b] = [                                      ]
                     [             2  2                     ]
                     [ 0     0    k  r             0        ]
                     [                                      ]
                     [                      2  2           2]
                     [ 0     0      0      k  r  sin(theta) ]

You may choose to 0) Use the metric WITHOUT saving it,
                  1) Save the metric as it is,
                  2) Correct an element of the metric,
                  3) Re-enter the metric,
                  4) Add/change constraint equations, 
                  5) Add a text description, or
                  6) Abandon this metric and return to Maple.

> 0:
Calculated ds for BarriolaVilenkin (.010000 sec.)

                 Default spacetime = BarriolaVilenkin


                 For the BarriolaVilenkin spacetime:


                             Coordinates


                                x(up)


                         a
                       x   = [t, r, theta, phi]


                             Line element


     2     2     2        2     2  2         2
   ds  = -c   d t   +  d r   + k  r   d theta

            2  2           2       2
         + k  r  sin(theta)   d phi

makeg() completed.
> grcalcd(Chr2);
Calculated detg for BarriolaVilenkin (0.000000 sec.)
Calculated g(up,up) for BarriolaVilenkin (0.000000 sec.)
Calculated g(dn,dn,pdn) for BarriolaVilenkin (0.000000 sec.)
Calculated Chr(dn,dn,dn) for BarriolaVilenkin (0.000000 sec.)
Calculated Chr(dn,dn,up) for BarriolaVilenkin (0.000000 sec.)

                            CPU Time  = 0.


                 For the BarriolaVilenkin spacetime:


  Christoffel symbol of the second kind (symmetric in first two in\
        dices)


                                     theta
                     Gamma[r theta]        = 1/r


                                     phi
                       Gamma[r phi]      = 1/r


                                        r     2
                    Gamma[theta theta]    = -k  r


                                    phi   cos(theta)
                  Gamma[theta phi]      = ----------
                                          sin(theta)


                                r     2             2
                Gamma[phi phi]    = -k  r sin(theta)


                            theta
            Gamma[phi phi]        = -sin(theta) cos(theta)

> grcalcd(R(dn,dn,dn,dn));
Calculated R(dn,dn,dn,dn) for BarriolaVilenkin (.011000 sec.)

                           CPU Time  = .011


                 For the BarriolaVilenkin spacetime:


                          Covariant Riemann


                              2  2           2    4  2           2
   R [theta phi theta phi] = k  r  sin(theta)  - k  r  sin(theta)

> gl:=array(1..4):
> for i from 1 to 4 do:
>   gl[i]:=-add(add(grcomponent(Chr2,[j,k,i])*y[4+j]*y[4+k],j=1..4),k=1..4):
> od:
> gl[1];

                                  0

> gl[2];

                          2                  2     2
                  9 r y[7]  + 16 r sin(theta)  y[8]

> gl[3];

                 y[7] y[6]                             2
              -2 --------- + sin(theta) cos(theta) y[8]
                     r

> gl[4];

                   y[8] y[6]   2 cos(theta) y[8] y[7]
                -2 --------- - ----------------------
                       r             sin(theta)

> grcalcd(Ricci);
Calculated R(dn,dn) for BarriolaVilenkin (0.000000 sec.)

                            CPU Time  = 0.


                 For the BarriolaVilenkin spacetime:


                           Covariant Ricci


                              R(dn, dn)


                [0    0      0                    0              ]
                [                                                ]
                [0    0      0                    0              ]
                [                                                ]
   R [a]  [b] = [               2                                ]
                [0    0    1 - k                  0              ]
                [                                                ]
                [                              2    2           2]
                [0    0      0       sin(theta)  - k  sin(theta) ]

> grcalcd(Ricciscalar);
Calculated Ricciscalar for BarriolaVilenkin (0.000000 sec.)

                            CPU Time  = 0.


                 For the BarriolaVilenkin spacetime:


                             Ricci scalar


                                         2
                                   -1 + k
                           R  = -2 -------
                                     2  2
                                    k  r

> grcalcd(RiemSq);
Created definition for R(dn,dn,up,up) 
Calculated R(dn,dn,up,up) for BarriolaVilenkin (.010000 sec.)
Calculated RiemSq for BarriolaVilenkin (0.000000 sec.)

                           CPU Time  = .050


                 For the BarriolaVilenkin spacetime:


                     Full Contraction of Riemann


                                        2 2
                                 (-1 + k )
                          K  = 4 ----------
                                    4  4
                                   k  r

> g_compts:=grarray(g(dn,dn)):
> codegen[C](g_compts,optimized);
      t1 = c*c;
      t2 = k*k;
      t3 = r*r;
      t4 = t2*t3;
      t5 = sin(theta);
      t6 = t5*t5;
      g_compts[0][0] = -t1;
      g_compts[0][1] = 0.0;
      g_compts[0][2] = 0.0;
      g_compts[0][3] = 0.0;
      g_compts[1][0] = 0.0;
      g_compts[1][1] = 1.0;
      g_compts[1][2] = 0.0;
      g_compts[1][3] = 0.0;
      g_compts[2][0] = 0.0;
      g_compts[2][1] = 0.0;
      g_compts[2][2] = t4;
      g_compts[2][3] = 0.0;
      g_compts[3][0] = 0.0;
      g_compts[3][1] = 0.0;
      g_compts[3][2] = 0.0;
      g_compts[3][3] = t4*t6;
> christoffel:=grarray(Chr2):
> codegen[C](christoffel,optimized);
      t1 = 1/r;
      t2 = k*k;
      t3 = t2*r;
      t4 = sin(theta);
      t6 = cos(theta);
      t7 = 1/t4*t6;
      t8 = t4*t4;
      christoffel[0][0][0] = 0.0;
      christoffel[0][0][1] = 0.0;
      christoffel[0][0][2] = 0.0;
      christoffel[0][0][3] = 0.0;
      christoffel[0][1][0] = 0.0;
      christoffel[0][1][1] = 0.0;
      christoffel[0][1][2] = 0.0;
      christoffel[0][1][3] = 0.0;
      christoffel[0][2][0] = 0.0;
      christoffel[0][2][1] = 0.0;
      christoffel[0][2][2] = 0.0;
      christoffel[0][2][3] = 0.0;
      christoffel[0][3][0] = 0.0;
      christoffel[0][3][1] = 0.0;
      christoffel[0][3][2] = 0.0;
      christoffel[0][3][3] = 0.0;
      christoffel[1][0][0] = 0.0;
      christoffel[1][0][1] = 0.0;
      christoffel[1][0][2] = 0.0;
      christoffel[1][0][3] = 0.0;
      christoffel[1][1][0] = 0.0;
      christoffel[1][1][1] = 0.0;
      christoffel[1][1][2] = 0.0;
      christoffel[1][1][3] = 0.0;
      christoffel[1][2][0] = 0.0;
      christoffel[1][2][1] = 0.0;
      christoffel[1][2][2] = t1;
      christoffel[1][2][3] = 0.0;
      christoffel[1][3][0] = 0.0;
      christoffel[1][3][1] = 0.0;
      christoffel[1][3][2] = 0.0;
      christoffel[1][3][3] = t1;
      christoffel[2][0][0] = 0.0;
      christoffel[2][0][1] = 0.0;
      christoffel[2][0][2] = 0.0;
      christoffel[2][0][3] = 0.0;
      christoffel[2][1][0] = 0.0;
      christoffel[2][1][1] = 0.0;
      christoffel[2][1][2] = t1;
      christoffel[2][1][3] = 0.0;
      christoffel[2][2][0] = 0.0;
      christoffel[2][2][1] = -t3;
      christoffel[2][2][2] = 0.0;
      christoffel[2][2][3] = 0.0;
      christoffel[2][3][0] = 0.0;
      christoffel[2][3][1] = 0.0;
      christoffel[2][3][2] = 0.0;
      christoffel[2][3][3] = t7;
      christoffel[3][0][0] = 0.0;
      christoffel[3][0][1] = 0.0;
      christoffel[3][0][2] = 0.0;
      christoffel[3][0][3] = 0.0;
      christoffel[3][1][0] = 0.0;
      christoffel[3][1][1] = 0.0;
      christoffel[3][1][2] = 0.0;
      christoffel[3][1][3] = t1;
      christoffel[3][2][0] = 0.0;
      christoffel[3][2][1] = 0.0;
      christoffel[3][2][2] = 0.0;
      christoffel[3][2][3] = t7;
      christoffel[3][3][0] = 0.0;
      christoffel[3][3][1] = -t3*t8;
      christoffel[3][3][2] = -t4*t6;
      christoffel[3][3][3] = 0.0;
> grcalcd(Chr(dn,dn,up,pdn)):
Created a definition for Chr(dn,dn,up,pdn)
Calculated Chr(dn,dn,up,pdn) for BarriolaVilenkin (.009000 sec.)

                           CPU Time  = .019


                 For the BarriolaVilenkin spacetime:


                          Chr(dn,dn,up,pdn)


                                theta             1
                Gamma[r theta]         [, r] = - ----
                                                   2
                                                  r


                                phi             1
                  Gamma[r phi]       [, r] = - ----
                                                 2
                                                r


                                      r            2
                  Gamma[theta theta]     [, r] = -k


                                                   2             2
                      phi                cos(theta)  + sin(theta)
    Gamma[theta phi]       [, theta] = - -------------------------
                                                          2
                                                sin(theta)


                              r            2           2
              Gamma[phi phi]     [, r] = -k  sin(theta)


                     r                  2
     Gamma[phi phi]     [, theta] = -2 k  r sin(theta) cos(theta)


                    theta                         2             2
    Gamma[phi phi]         [, theta] = -cos(theta)  + sin(theta)

> chrisD:=grarray(Chr(dn,dn,up,pdn)):
> codegen[C](chrisD,optimized);
      t1 = r*r;
      t2 = 1/t1;
      t3 = k*k;
      t4 = cos(theta);
      t5 = t4*t4;
      t6 = sin(theta);
      t7 = t6*t6;
      t10 = (t5+t7)/t7;
      chrisD[0][0][0][0] = 0.0;
      chrisD[0][0][0][1] = 0.0;
      chrisD[0][0][0][2] = 0.0;
      chrisD[0][0][0][3] = 0.0;
      chrisD[0][0][1][0] = 0.0;
      chrisD[0][0][1][1] = 0.0;
      chrisD[0][0][1][2] = 0.0;
      chrisD[0][0][1][3] = 0.0;
      chrisD[0][0][2][0] = 0.0;
      chrisD[0][0][2][1] = 0.0;
      chrisD[0][0][2][2] = 0.0;
      chrisD[0][0][2][3] = 0.0;
      chrisD[0][0][3][0] = 0.0;
      chrisD[0][0][3][1] = 0.0;
      chrisD[0][0][3][2] = 0.0;
      chrisD[0][0][3][3] = 0.0;
      chrisD[0][1][0][0] = 0.0;
      chrisD[0][1][0][1] = 0.0;
      chrisD[0][1][0][2] = 0.0;
      chrisD[0][1][0][3] = 0.0;
      chrisD[0][1][1][0] = 0.0;
      chrisD[0][1][1][1] = 0.0;
      chrisD[0][1][1][2] = 0.0;
      chrisD[0][1][1][3] = 0.0;
      chrisD[0][1][2][0] = 0.0;
      chrisD[0][1][2][1] = 0.0;
      chrisD[0][1][2][2] = 0.0;
      chrisD[0][1][2][3] = 0.0;
      chrisD[0][1][3][0] = 0.0;
      chrisD[0][1][3][1] = 0.0;
      chrisD[0][1][3][2] = 0.0;
      chrisD[0][1][3][3] = 0.0;
      chrisD[0][2][0][0] = 0.0;
      chrisD[0][2][0][1] = 0.0;
      chrisD[0][2][0][2] = 0.0;
      chrisD[0][2][0][3] = 0.0;
      chrisD[0][2][1][0] = 0.0;
      chrisD[0][2][1][1] = 0.0;
      chrisD[0][2][1][2] = 0.0;
      chrisD[0][2][1][3] = 0.0;
      chrisD[0][2][2][0] = 0.0;
      chrisD[0][2][2][1] = 0.0;
      chrisD[0][2][2][2] = 0.0;
      chrisD[0][2][2][3] = 0.0;
      chrisD[0][2][3][0] = 0.0;
      chrisD[0][2][3][1] = 0.0;
      chrisD[0][2][3][2] = 0.0;
      chrisD[0][2][3][3] = 0.0;
      chrisD[0][3][0][0] = 0.0;
      chrisD[0][3][0][1] = 0.0;
      chrisD[0][3][0][2] = 0.0;
      chrisD[0][3][0][3] = 0.0;
      chrisD[0][3][1][0] = 0.0;
      chrisD[0][3][1][1] = 0.0;
      chrisD[0][3][1][2] = 0.0;
      chrisD[0][3][1][3] = 0.0;
      chrisD[0][3][2][0] = 0.0;
      chrisD[0][3][2][1] = 0.0;
      chrisD[0][3][2][2] = 0.0;
      chrisD[0][3][2][3] = 0.0;
      chrisD[0][3][3][0] = 0.0;
      chrisD[0][3][3][1] = 0.0;
      chrisD[0][3][3][2] = 0.0;
      chrisD[0][3][3][3] = 0.0;
      chrisD[1][0][0][0] = 0.0;
      chrisD[1][0][0][1] = 0.0;
      chrisD[1][0][0][2] = 0.0;
      chrisD[1][0][0][3] = 0.0;
      chrisD[1][0][1][0] = 0.0;
      chrisD[1][0][1][1] = 0.0;
      chrisD[1][0][1][2] = 0.0;
      chrisD[1][0][1][3] = 0.0;
      chrisD[1][0][2][0] = 0.0;
      chrisD[1][0][2][1] = 0.0;
      chrisD[1][0][2][2] = 0.0;
      chrisD[1][0][2][3] = 0.0;
      chrisD[1][0][3][0] = 0.0;
      chrisD[1][0][3][1] = 0.0;
      chrisD[1][0][3][2] = 0.0;
      chrisD[1][0][3][3] = 0.0;
      chrisD[1][1][0][0] = 0.0;
      chrisD[1][1][0][1] = 0.0;
      chrisD[1][1][0][2] = 0.0;
      chrisD[1][1][0][3] = 0.0;
      chrisD[1][1][1][0] = 0.0;
      chrisD[1][1][1][1] = 0.0;
      chrisD[1][1][1][2] = 0.0;
      chrisD[1][1][1][3] = 0.0;
      chrisD[1][1][2][0] = 0.0;
      chrisD[1][1][2][1] = 0.0;
      chrisD[1][1][2][2] = 0.0;
      chrisD[1][1][2][3] = 0.0;
      chrisD[1][1][3][0] = 0.0;
      chrisD[1][1][3][1] = 0.0;
      chrisD[1][1][3][2] = 0.0;
      chrisD[1][1][3][3] = 0.0;
      chrisD[1][2][0][0] = 0.0;
      chrisD[1][2][0][1] = 0.0;
      chrisD[1][2][0][2] = 0.0;
      chrisD[1][2][0][3] = 0.0;
      chrisD[1][2][1][0] = 0.0;
      chrisD[1][2][1][1] = 0.0;
      chrisD[1][2][1][2] = 0.0;
      chrisD[1][2][1][3] = 0.0;
      chrisD[1][2][2][0] = 0.0;
      chrisD[1][2][2][1] = -t2;
      chrisD[1][2][2][2] = 0.0;
      chrisD[1][2][2][3] = 0.0;
      chrisD[1][2][3][0] = 0.0;
      chrisD[1][2][3][1] = 0.0;
      chrisD[1][2][3][2] = 0.0;
      chrisD[1][2][3][3] = 0.0;
      chrisD[1][3][0][0] = 0.0;
      chrisD[1][3][0][1] = 0.0;
      chrisD[1][3][0][2] = 0.0;
      chrisD[1][3][0][3] = 0.0;
      chrisD[1][3][1][0] = 0.0;
      chrisD[1][3][1][1] = 0.0;
      chrisD[1][3][1][2] = 0.0;
      chrisD[1][3][1][3] = 0.0;
      chrisD[1][3][2][0] = 0.0;
      chrisD[1][3][2][1] = 0.0;
      chrisD[1][3][2][2] = 0.0;
      chrisD[1][3][2][3] = 0.0;
      chrisD[1][3][3][0] = 0.0;
      chrisD[1][3][3][1] = -t2;
      chrisD[1][3][3][2] = 0.0;
      chrisD[1][3][3][3] = 0.0;
      chrisD[2][0][0][0] = 0.0;
      chrisD[2][0][0][1] = 0.0;
      chrisD[2][0][0][2] = 0.0;
      chrisD[2][0][0][3] = 0.0;
      chrisD[2][0][1][0] = 0.0;
      chrisD[2][0][1][1] = 0.0;
      chrisD[2][0][1][2] = 0.0;
      chrisD[2][0][1][3] = 0.0;
      chrisD[2][0][2][0] = 0.0;
      chrisD[2][0][2][1] = 0.0;
      chrisD[2][0][2][2] = 0.0;
      chrisD[2][0][2][3] = 0.0;
      chrisD[2][0][3][0] = 0.0;
      chrisD[2][0][3][1] = 0.0;
      chrisD[2][0][3][2] = 0.0;
      chrisD[2][0][3][3] = 0.0;
      chrisD[2][1][0][0] = 0.0;
      chrisD[2][1][0][1] = 0.0;
      chrisD[2][1][0][2] = 0.0;
      chrisD[2][1][0][3] = 0.0;
      chrisD[2][1][1][0] = 0.0;
      chrisD[2][1][1][1] = 0.0;
      chrisD[2][1][1][2] = 0.0;
      chrisD[2][1][1][3] = 0.0;
      chrisD[2][1][2][0] = 0.0;
      chrisD[2][1][2][1] = -t2;
      chrisD[2][1][2][2] = 0.0;
      chrisD[2][1][2][3] = 0.0;
      chrisD[2][1][3][0] = 0.0;
      chrisD[2][1][3][1] = 0.0;
      chrisD[2][1][3][2] = 0.0;
      chrisD[2][1][3][3] = 0.0;
      chrisD[2][2][0][0] = 0.0;
      chrisD[2][2][0][1] = 0.0;
      chrisD[2][2][0][2] = 0.0;
      chrisD[2][2][0][3] = 0.0;
      chrisD[2][2][1][0] = 0.0;
      chrisD[2][2][1][1] = -t3;
      chrisD[2][2][1][2] = 0.0;
      chrisD[2][2][1][3] = 0.0;
      chrisD[2][2][2][0] = 0.0;
      chrisD[2][2][2][1] = 0.0;
      chrisD[2][2][2][2] = 0.0;
      chrisD[2][2][2][3] = 0.0;
      chrisD[2][2][3][0] = 0.0;
      chrisD[2][2][3][1] = 0.0;
      chrisD[2][2][3][2] = 0.0;
      chrisD[2][2][3][3] = 0.0;
      chrisD[2][3][0][0] = 0.0;
      chrisD[2][3][0][1] = 0.0;
      chrisD[2][3][0][2] = 0.0;
      chrisD[2][3][0][3] = 0.0;
      chrisD[2][3][1][0] = 0.0;
      chrisD[2][3][1][1] = 0.0;
      chrisD[2][3][1][2] = 0.0;
      chrisD[2][3][1][3] = 0.0;
      chrisD[2][3][2][0] = 0.0;
      chrisD[2][3][2][1] = 0.0;
      chrisD[2][3][2][2] = 0.0;
      chrisD[2][3][2][3] = 0.0;
      chrisD[2][3][3][0] = 0.0;
      chrisD[2][3][3][1] = 0.0;
      chrisD[2][3][3][2] = -t10;
      chrisD[2][3][3][3] = 0.0;
      chrisD[3][0][0][0] = 0.0;
      chrisD[3][0][0][1] = 0.0;
      chrisD[3][0][0][2] = 0.0;
      chrisD[3][0][0][3] = 0.0;
      chrisD[3][0][1][0] = 0.0;
      chrisD[3][0][1][1] = 0.0;
      chrisD[3][0][1][2] = 0.0;
      chrisD[3][0][1][3] = 0.0;
      chrisD[3][0][2][0] = 0.0;
      chrisD[3][0][2][1] = 0.0;
      chrisD[3][0][2][2] = 0.0;
      chrisD[3][0][2][3] = 0.0;
      chrisD[3][0][3][0] = 0.0;
      chrisD[3][0][3][1] = 0.0;
      chrisD[3][0][3][2] = 0.0;
      chrisD[3][0][3][3] = 0.0;
      chrisD[3][1][0][0] = 0.0;
      chrisD[3][1][0][1] = 0.0;
      chrisD[3][1][0][2] = 0.0;
      chrisD[3][1][0][3] = 0.0;
      chrisD[3][1][1][0] = 0.0;
      chrisD[3][1][1][1] = 0.0;
      chrisD[3][1][1][2] = 0.0;
      chrisD[3][1][1][3] = 0.0;
      chrisD[3][1][2][0] = 0.0;
      chrisD[3][1][2][1] = 0.0;
      chrisD[3][1][2][2] = 0.0;
      chrisD[3][1][2][3] = 0.0;
      chrisD[3][1][3][0] = 0.0;
      chrisD[3][1][3][1] = -t2;
      chrisD[3][1][3][2] = 0.0;
      chrisD[3][1][3][3] = 0.0;
      chrisD[3][2][0][0] = 0.0;
      chrisD[3][2][0][1] = 0.0;
      chrisD[3][2][0][2] = 0.0;
      chrisD[3][2][0][3] = 0.0;
      chrisD[3][2][1][0] = 0.0;
      chrisD[3][2][1][1] = 0.0;
      chrisD[3][2][1][2] = 0.0;
      chrisD[3][2][1][3] = 0.0;
      chrisD[3][2][2][0] = 0.0;
      chrisD[3][2][2][1] = 0.0;
      chrisD[3][2][2][2] = 0.0;
      chrisD[3][2][2][3] = 0.0;
      chrisD[3][2][3][0] = 0.0;
      chrisD[3][2][3][1] = 0.0;
      chrisD[3][2][3][2] = -t10;
      chrisD[3][2][3][3] = 0.0;
      chrisD[3][3][0][0] = 0.0;
      chrisD[3][3][0][1] = 0.0;
      chrisD[3][3][0][2] = 0.0;
      chrisD[3][3][0][3] = 0.0;
      chrisD[3][3][1][0] = 0.0;
      chrisD[3][3][1][1] = -t3*t7;
      chrisD[3][3][1][2] = -2.0*t3*r*t6*t4;
      chrisD[3][3][1][3] = 0.0;
      chrisD[3][3][2][0] = 0.0;
      chrisD[3][3][2][1] = 0.0;
      chrisD[3][3][2][2] = -t5+t7;
      chrisD[3][3][2][3] = 0.0;
      chrisD[3][3][3][0] = 0.0;
      chrisD[3][3][3][1] = 0.0;
      chrisD[3][3][3][2] = 0.0;
      chrisD[3][3][3][3] = 0.0;
> 
